{
    "obj_name": "is_directives",
    "set_name": "THUMB_ARM7TDMI",
    "is_directives": [
        {
            "obj_name": "is_directive",
            "directive_name": "@DCB",
            "arg_len": 1,
            "args": [
                {
                    "obj_name": "is_directive_arg",
                    "arg_index": 0,
                    "bit_index": 0,
                    "is_entry_types": ["Number", "LabelRef"],
                    "is_arg_type": "Number",
                    "bit_series": {
                        "bit_start": 0,
                        "bit_stop": 15,
                        "bit_len": 16
                    },
                    "num_range": {
                        "min_value": 0,
                        "max_value": 255,
                        "bit_len": 8,
                        "twos_compliment": false,
                        "alignment": "HALFWORD"
                    },
                    "bit_shift": {
                        "shift_dir": "NONE",
                        "shift_amount": -1
                    }
                }                
            ],
            "description": "The DCB directive is used to write data, one byte written as a halfword, directly into the data AREA of an assembly file."
        },      
        {
            "obj_name": "is_directive",
            "directive_name": "@DCHW",
            "arg_len": 1,
            "args": [
                {
                    "obj_name": "is_directive_arg",
                    "arg_index": 0,
                    "bit_index": 0,
                    "is_entry_types": ["Number", "LabelRef"],
                    "is_arg_type": "Number",
                    "bit_series": {
                        "bit_start": 0,
                        "bit_stop": 15,
                        "bit_len": 16
                    },
                    "num_range": {
                        "min_value": 0,
                        "max_value": 65536,
                        "bit_len": 16,
                        "twos_compliment": false,
                        "alignment": "HALFWORD"
                    },
                    "bit_shift": {
                        "shift_dir": "NONE",
                        "shift_amount": -1
                    }
                }                
            ],
            "description": "The DCHW directive is used to write data, one halfword, directly into the data AREA of an assembly file."
        },
        {
            "obj_name": "is_directive",
            "directive_name": "@DCWBF",
            "arg_len": 1,
            "args": [
                {
                    "obj_name": "is_directive_arg",
                    "arg_index": 0,
                    "bit_index": 0,
                    "is_entry_types": ["Number", "LabelRef"],
                    "is_arg_type": "Number",
                    "bit_series": {
                        "bit_start": 0,
                        "bit_stop": 15,
                        "bit_len": 16
                    },
                    "num_range": {
                        "min_value": 0,
                        "max_value": 65536,
                        "bit_len": 16,
                        "twos_compliment": false,
                        "alignment": "HALFWORD"
                    },
                    "bit_shift": {
                        "shift_dir": "NONE",
                        "shift_amount": -1
                    }
                }                
            ],
            "description": "The DCWBF directive is used to write data the first halfword of an int, directly into the data AREA of an assembly file."
        },
        {
            "obj_name": "is_directive",
            "directive_name": "@DCWBS",
            "arg_len": 1,
            "args": [
                {
                    "obj_name": "is_directive_arg",
                    "arg_index": 0,
                    "bit_index": 0,
                    "is_entry_types": ["Number", "LabelRef"],
                    "is_arg_type": "Number",
                    "bit_series": {
                        "bit_start": 0,
                        "bit_stop": 15,
                        "bit_len": 16
                    },
                    "num_range": {
                        "min_value": 0,
                        "max_value": 65536,
                        "bit_len": 16,
                        "twos_compliment": false,
                        "alignment": "HALFWORD"
                    },
                    "bit_shift": {
                        "shift_dir": "NONE",
                        "shift_amount": -1
                    }
                }                
            ],
            "description": "The DCWBS directive is used to write data the second halfword of an int, directly into the data AREA of an assembly file."
        },        
        {
            "obj_name": "is_directive",
            "directive_name": "@FLPDCHW",
            "arg_len": 1,
            "args": [
                {
                    "obj_name": "is_directive_arg",
                    "arg_index": 0,
                    "bit_index": 0,
                    "is_entry_types": ["Number", "LabelRef"],
                    "is_arg_type": "Number",
                    "bit_series": {
                        "bit_start": 0,
                        "bit_stop": 15,
                        "bit_len": 16
                    },
                    "num_range": {
                        "min_value": 0,
                        "max_value": 65536,
                        "bit_len": 16,
                        "twos_compliment": false,
                        "alignment": "HALFWORD"
                    },
                    "bit_shift": {
                        "shift_dir": "NONE",
                        "shift_amount": -1
                    }
                }                
            ],
            "description": "The FLPDCHW directive is used to write flipped data, one halfword, directly into the data AREA of an assembly file."
        },        
        {
            "obj_name": "is_directive",
            "directive_name": "@EQU",
            "arg_len": 1,
            "args": [
                {
                    "obj_name": "is_directive_arg",
                    "arg_index": 0,
                    "bit_index": 0,
                    "is_entry_types": ["Number"],
                    "is_arg_type": "Number",
                    "bit_series": {
                        "bit_start": 0,
                        "bit_stop": 15,
                        "bit_len": 16
                    },
                    "num_range": {
                        "min_value": 0,
                        "max_value": 65536,
                        "bit_len": 16,
                        "twos_compliment": false,
                        "alignment": "WORD"
                    },
                    "bit_shift": {
                        "shift_dir": "NONE",
                        "shift_amount": -1
                    }
                }                
            ],
            "description": "The EQU directive is used to store a 16-bit value in the symbol table for value lookup."
        },
        {
            "obj_name": "is_directive",
            "directive_name": "@ORG",
            "arg_len": 1,
            "args": [
                {
                    "obj_name": "is_directive_arg",
                    "arg_index": 0,
                    "bit_index": 0,
                    "is_entry_types": ["Number"],
                    "is_arg_type": "Number",
                    "bit_series": {
                        "bit_start": 0,
                        "bit_stop": 31,
                        "bit_len": 32
                    },
                    "num_range": {
                        "min_value": 0,
                        "max_value": 2147483647,
                        "bit_len": 32,
                        "twos_compliment": false,
                        "alignment": "WORD"
                    },
                    "bit_shift": {
                        "shift_dir": "NONE",
                        "shift_amount": -1
                    }
                }                
            ],
            "description": "The ORG directive is used to set the starting memory address of the program."
        },        
        {
            "obj_name": "is_directive",
            "directive_name": "@TTL",
            "arg_len": 1,
            "args": [
                {
                    "obj_name": "is_directive_arg",  
                    "arg_index": 0,
                    "is_entry_types": ["DirectiveString"],                    
                    "is_arg_type": "String"
                }
            ],
            "description": "The TTL directive inserts a title at the start of each page of a listing file."
        },
        {
            "obj_name": "is_directive",
            "directive_name": "@THUMB",
            "arg_len": 0,
            "args": [
            ],
            "description": "The THUMB directive instructs the assembler to interpret subsequent instructions as Thumb instructions."
        },
        {
            "obj_name": "is_directive",
            "directive_name": "@SUBT",
            "arg_len": 1,
            "args": [
                {
                    "obj_name": "is_directive_arg",  
                    "arg_index": 0,
                    "is_entry_types": ["DirectiveString"],                    
                    "is_arg_type": "String"
                }
            ],
            "description": "The SUBT directive places a subtitle on the pages of a listing file."
        },
        {
            "obj_name": "is_directive",
            "directive_name": "@ENTRY",
            "arg_len": 0,
            "args": [
            ],
            "description": "The ENTRY directive declares an entry point to a program."
        },
        {
            "obj_name": "is_directive",
            "directive_name": "@END",
            "arg_len": 0,
            "args": [
            ],
            "description": "The END directive informs the assembler that it has reached the end of a source file."
        },
        {
            "obj_name": "is_directive",
            "directive_name": "@AREA",
            "arg_len": 1,
            "args": [
                {
                    "obj_name": "is_directive_arg",  
                    "arg_index": 0,
                    "is_entry_types": ["DirectiveString"],                    
                    "is_arg_type": "String"
                },
                {
                    "obj_name": "is_directive_arg",  
                    "arg_index": 1,
                    "is_entry_types": ["Directive"],                    
                    "is_arg_type": "Directive",
                    "is_arg_value": ["@CODE", "@DATA"]
                },
                {
                    "obj_name": "is_directive_arg",  
                    "arg_index": 2,
                    "is_entry_types": ["Directive"],                    
                    "is_arg_type": "Directive",
                    "is_arg_value": ["@READONLY", "@READWRITE"]
                }                
            ],
            "description": "The AREA directive instructs the assembler to assemble a new code or data section."
        },
        {
            "obj_name": "is_directive",
            "directive_name": "@READONLY",
            "arg_len": 0,
            "args": [
            ],
            "description": "The READONLY directive indicates that this section must not be written to. This is the default for Code areas."
        },
        {
            "obj_name": "is_directive",
            "directive_name": "@READWRITE",
            "arg_len": 0,
            "args": [
            ],
            "description": "The READWRITE directive indicates that this section can be read from and written to. This is the default for Data areas."
        },
        {
            "obj_name": "is_directive",
            "directive_name": "@CODE",
            "arg_len": 0,
            "args": [
            ],
            "description": "Contains machine instructions. READONLY is the default."
        },
        {
            "obj_name": "is_directive",
            "directive_name": "@DATA",
            "arg_len": 0,
            "args": [
            ],
            "description": "Contains data directive. READWRITE is the default."
        }        
    ]
}
